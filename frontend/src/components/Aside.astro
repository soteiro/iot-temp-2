---
interface Props {
  userName?: string;
  userEmail?: string;
}

const { userName = "Usuario", userEmail = "<Email>" } = Astro.props;
---

<button
  id="burgerBtn"
  class="md:hidden fixed top-4 left-4 z-50 btn btn-circle btn-primary shadow-lg"
  aria-label="Abrir menú"
  type="button">
  <svg
    class="w-6 h-6"
    fill="none"
    stroke="currentColor"
    viewBox="0 0 24 24">
    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
  </svg>
</button>

<aside
  id="asideMenu"
  class="fixed top-0 left-0 h-full w-72 bg-base-100 shadow-2xl z-40 transform -translate-x-full transition-all duration-300 ease-in-out md:static md:translate-x-0 md:w-64 md:shadow-lg border-r border-base-300 flex flex-col">
  
  <!-- Header del sidebar -->
  <div class="navbar bg-primary text-base-content/90 border-b border-primary-content/20 min-h-16 rounded-b-lg">
    <div class="flex-1 place-items-center">
      <h2 class="text-xl font-bold">Temply</h2>
    </div>
    <div class="flex-none md:hidden">
      <button
        id="closeAside"
        class="btn btn-square btn-ghost"
        aria-label="Cerrar menú"
        type="button">
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
        </svg>
      </button>
    </div>
  </div>

  <!-- Navegación principal -->
  <nav class="flex-1 p-4 overflow-y-auto">
    <ul class="menu menu-vertical space-y-2">
      <li>
        <a href="/dashboard" class="flex items-center gap-3 text-base font-medium hover:bg-primary hover:text-primary-content rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 7v10a2 2 0 002 2h14a2 2 0 002-2V9a2 2 0 00-2-2H5a2 2 0 00-2-2z" />
          </svg>
          Dashboard
        </a>
      </li>
      <li>
        <a href="/devices" class="flex items-center gap-3 text-base font-medium hover:bg-primary hover:text-primary-content rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 3v2m6-2v2M9 19v2m6-2v2M5 9H3m2 6H3m18-6h-2m2 6h-2M7 19h10a2 2 0 002-2V7a2 2 0 00-2-2H7a2 2 0 00-2 2v10a2 2 0 002 2zM9 9h6v6H9V9z" />
          </svg>
          Dispositivos
        </a>
      </li>
      <li>
        <a href="/analytics" class="flex items-center gap-3 text-base font-medium hover:bg-primary hover:text-primary-content rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 8v8m-4-5v5m-4-2v2m-2 4h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z" />
          </svg>
          Analytics
        </a>
      </li>
      <li>
        <a href="/alerts" class="flex items-center gap-3 text-base font-medium hover:bg-primary hover:text-primary-content rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 17h5l-5 5-5-5h5v-5a7.5 7.5 0 01-6.32-11.53" />
          </svg>
          Alertas
        </a>
      </li>
      
      <!-- Divider -->
      <div class="divider"></div>
      
      <li>
        <a href="/settings" class="flex items-center gap-3 text-base font-medium hover:bg-base-200 rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
          </svg>
          Configuración
        </a>
      </li>
      <li>
        <a href="/profile" class="flex items-center gap-3 text-base font-medium hover:bg-base-200 rounded-lg transition-colors">
          <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z" />
          </svg>
          Perfil
        </a>
      </li>
    </ul>
  </nav>

  <!-- Footer del sidebar -->
  <footer class="p-4 border-t border-base-300 bg-base-100 mt-auto">
    <div class="flex items-center gap-3 mb-4 p-2 bg-base-200 rounded-lg">
      <div class="avatar placeholder">
        <div class="bg-primary text-primary-content rounded-full w-10">
          <img src=`https://robohash.org/${userName}` alt="">
        </div>
      </div>
      <div class="flex-1 min-w-0">
        <p class="text-sm font-medium truncate">{userName}</p>
        <p class="text-xs text-base-content/70 truncate">{userEmail}</p>
      </div>
    </div>
    
    <button 
      onclick="logout()" 
      class="btn btn-outline btn-error w-full">
      <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1" />
      </svg>
      Cerrar Sesión
    </button>
  </footer>
</aside>

<!-- Overlay para mobile -->
<div
  id="sidebarOverlay"
  class="fixed inset-0 bg-base-100/70 z-30 md:hidden hidden transition-opacity duration-300">
</div>

<script>
  declare global {
    interface Window {
      logout: () => Promise<void>;
    }
  }

  const burgerBtn = document.getElementById("burgerBtn");
  const asideMenu = document.getElementById("asideMenu");
  const closeAside = document.getElementById("closeAside");
  const overlay = document.getElementById("sidebarOverlay");

  function openSidebar() {
    asideMenu?.classList.remove("-translate-x-full");
    overlay?.classList.remove("hidden");
    document.body.classList.add("overflow-hidden");
    burgerBtn?.classList.add("hidden");
  }

  function closeSidebar() {
    asideMenu?.classList.add("-translate-x-full");
    overlay?.classList.add("hidden");
    document.body.classList.remove("overflow-hidden");
    burgerBtn?.classList.remove("hidden");
  }

  burgerBtn?.addEventListener("click", openSidebar);
  closeAside?.addEventListener("click", closeSidebar);
  overlay?.addEventListener("click", closeSidebar);

  async function logout() {
    const apiUrl = import.meta.env.PUBLIC_API_URL || "http://localhost:8787";

    try {
      const res = await fetch(`${apiUrl}/auth/logout`, {
        method: "POST",
        credentials: "include",
      });
      if (res.ok) {
        window.location.href = "/login";
      }
    } catch (e) {
      console.error("Error during logout:", e);
    }
  }
  
  window.logout = logout;
</script>
