---
import AppLayout from "@/layouts/AppLayout.astro";

// Simulación de datos del usuario final
const userProfile = {
  personal: {
    fullName: "Ana García López",
    username: "ana.garcia",
    email: "ana.garcia@gmail.com",
    phone: "+52 55 9876 5432",
    avatar: "/api/placeholder/120/120",
    joinDate: "15 de marzo, 2024",
    lastLogin: Date.now() - 1 * 60 * 60 * 1000, // 1 hora atrás
    emailVerified: true,
    phoneVerified: false
  },
  preferences: {
    theme: "system",
    language: "es",
    timezone: "America/Mexico_City",
    notifications: {
      email: true,
      push: true,
      sms: false
    },
    privacy: {
      profilePublic: false,
      showActivity: true,
      dataSharing: false
    }
  },
  stats: {
    devicesOwned: 3,
    alertsReceived: 24,
    dataUsage: "2.4 GB",
    memberDays: Math.floor((Date.now() - new Date("2024-03-15").getTime()) / (1000 * 60 * 60 * 24))
  },
  devices: [
    { name: "Sensor Cocina", location: "Cocina", status: "online", lastReading: "22.5°C", time: "Hace 2 min" },
    { name: "Sensor Sala", location: "Sala de estar", status: "online", lastReading: "24.1°C", time: "Hace 1 min" },
    { name: "Sensor Dormitorio", location: "Dormitorio principal", status: "warning", lastReading: "28.9°C", time: "Hace 5 min" }
  ],
  recentActivity: [
    {
      type: "alert",
      message: "Temperatura alta en dormitorio (28.9°C)",
      time: Date.now() - 10 * 60 * 1000,
      icon: "exclamation-triangle",
      color: "warning"
    },
    {
      type: "device",
      message: "Sensor Cocina volvió a rango normal",
      time: Date.now() - 2 * 60 * 60 * 1000,
      icon: "check-circle",
      color: "success"
    },
    {
      type: "settings",
      message: "Configuración de notificaciones actualizada",
      time: Date.now() - 1 * 24 * 60 * 60 * 1000,
      icon: "cog",
      color: "info"
    }
  ]
};

// Función para formatear tiempo relativo
const getRelativeTime = (timestamp: number) => {
  const now = Date.now();
  const diff = now - timestamp;
  const minutes = Math.floor(diff / (1000 * 60));
  const hours = Math.floor(minutes / 60);
  const days = Math.floor(hours / 24);
  
  if (days > 0) return `hace ${days} día${days > 1 ? 's' : ''}`;
  if (hours > 0) return `hace ${hours} hora${hours > 1 ? 's' : ''}`;
  if (minutes > 0) return `hace ${minutes} minuto${minutes > 1 ? 's' : ''}`;
  return 'ahora mismo';
};
---

<AppLayout title="Mi Perfil">
  <div class="min-h-screen bg-base-200 p-4">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center gap-3 mb-2">
        <div class="w-10 h-10 bg-primary rounded-lg flex items-center justify-center">
          <svg class="w-6 h-6 text-primary-content" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
          </svg>
        </div>
        <div>
          <h1 class="text-3xl font-bold text-base-content">Mi Perfil</h1>
          <p class="text-base-content/70">Administra tu cuenta y configuración personal</p>
        </div>
      </div>
      <div class="text-sm breadcrumbs">
        <ul>
          <li><a href="/" class="text-primary">Inicio</a></li>
          <li><a href="/dashboard" class="text-primary">Dashboard</a></li>
          <li class="text-base-content">Mi Perfil</li>
        </ul>
      </div>
    </div>

    <div class="grid grid-cols-1 lg:grid-cols-4 gap-6">
      <!-- Profile Sidebar -->
      <div class="lg:col-span-1">
        <div class="card bg-base-100 shadow-lg border border-base-300 sticky top-4">
          <div class="card-body text-center">
            <!-- Avatar -->
            <div class="avatar online">
              <div class="w-24 rounded-full ring ring-primary ring-offset-base-100 ring-offset-2">
                <img src={userProfile.personal.avatar} alt="Mi Avatar" />
              </div>
            </div>

            <!-- User Info -->
            <h2 class="text-xl font-bold mt-4">{userProfile.personal.fullName}</h2>
            <p class="text-base-content/60">@{userProfile.personal.username}</p>
            
            <!-- Verification Status -->
            <div class="flex justify-center gap-2 mt-3">
              {userProfile.personal.emailVerified && (
                <div class="tooltip" data-tip="Email verificado">
                  <div class="badge badge-success badge-sm">
                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                    Email
                  </div>
                </div>
              )}
              {!userProfile.personal.phoneVerified && (
                <div class="tooltip" data-tip="Teléfono no verificado">
                  <div class="badge badge-warning badge-sm">
                    <svg class="w-3 h-3 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 5a2 2 0 012-2h3.28a1 1 0 01.948.684l1.498 4.493a1 1 0 01-.502 1.21l-2.257 1.13a11.042 11.042 0 005.516 5.516l1.13-2.257a1 1 0 011.21-.502l4.493 1.498a1 1 0 01.684.949V19a2 2 0 01-2 2h-1C9.716 21 3 14.284 3 6V5z"/>
                    </svg>
                    Teléfono
                  </div>
                </div>
              )}
            </div>

            <!-- Member Since -->
            <div class="bg-base-200 rounded-lg p-3 mt-4">
              <div class="text-xs text-base-content/60">Miembro desde</div>
              <div class="font-semibold">{userProfile.personal.joinDate}</div>
              <div class="text-xs text-base-content/60 mt-1">{userProfile.stats.memberDays} días</div>
            </div>

            <!-- Quick Stats -->
            <div class="stats stats-vertical shadow-sm bg-base-200 mt-4 w-full">
              <div class="stat p-3">
                <div class="stat-title text-xs">Mis Dispositivos</div>
                <div class="stat-value text-lg text-primary">{userProfile.stats.devicesOwned}</div>
              </div>
              <div class="stat p-3">
                <div class="stat-title text-xs">Alertas Totales</div>
                <div class="stat-value text-lg text-secondary">{userProfile.stats.alertsReceived}</div>
              </div>
              <div class="stat p-3">
                <div class="stat-title text-xs">Datos Usados</div>
                <div class="stat-value text-sm text-accent">{userProfile.stats.dataUsage}</div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Main Content -->
      <div class="lg:col-span-3 space-y-6">
        <!-- Account Settings -->
        <div class="card bg-base-100 shadow-lg border border-base-300">
          <div class="card-body">
            <h2 class="card-title mb-6">
              <svg class="w-5 h-5 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"/>
              </svg>
              Información de la Cuenta
            </h2>

            <form class="space-y-6">
              <!-- Basic Info -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="form-control">
                  <label class="label">
                    <span class="label-text font-medium">Nombre completo</span>
                  </label>
                  <input type="text" class="input input-bordered" value={userProfile.personal.fullName} />
                </div>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text font-medium">Nombre de usuario</span>
                  </label>
                  <input type="text" class="input input-bordered" value={userProfile.personal.username} />
                </div>
              </div>

              <!-- Contact Info -->
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div class="form-control">
                  <label class="label">
                    <span class="label-text font-medium flex items-center gap-2">
                      Correo electrónico
                      {userProfile.personal.emailVerified && (
                        <div class="badge badge-success badge-xs">Verificado</div>
                      )}
                    </span>
                  </label>
                  <div class="input-group">
                    <input type="email" class="input input-bordered flex-1" value={userProfile.personal.email} />
                    <button type="button" class="btn btn-outline">Cambiar</button>
                  </div>
                </div>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text font-medium flex items-center gap-2">
                      Teléfono
                      {!userProfile.personal.phoneVerified && (
                        <div class="badge badge-warning badge-xs">No verificado</div>
                      )}
                    </span>
                  </label>
                  <div class="input-group">
                    <input type="tel" class="input input-bordered flex-1" value={userProfile.personal.phone} />
                    <button type="button" class="btn btn-outline">Verificar</button>
                  </div>
                </div>
              </div>

              <div class="card-actions justify-end">
                <button type="submit" class="btn btn-primary">Guardar Cambios</button>
              </div>
            </form>
          </div>
        </div>

        <!-- Security Settings -->
        <div class="card bg-base-100 shadow-lg border border-base-300">
          <div class="card-body">
            <h2 class="card-title mb-6">
              <svg class="w-5 h-5 text-warning" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 15v2m-6 4h12a2 2 0 002-2v-6a2 2 0 00-2-2H6a2 2 0 00-2 2v6a2 2 0 002 2zm10-10V7a4 4 0 00-8 0v4h8z"/>
              </svg>
              Seguridad
            </h2>

            <div class="space-y-6">
              <!-- Change Password -->
              <div class="border border-base-300 rounded-lg p-6">
                <h3 class="font-semibold mb-4 flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-2.586a1 1 0 01.293-.707l5.964-5.964A6 6 0 1121 9z"/>
                  </svg>
                  Cambiar Contraseña
                </h3>
                <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text">Contraseña actual</span>
                    </label>
                    <input type="password" class="input input-bordered" placeholder="••••••••" />
                  </div>
                  <div class="form-control">
                    <label class="label">
                      <span class="label-text">Nueva contraseña</span>
                    </label>
                    <input type="password" class="input input-bordered" placeholder="••••••••" />
                  </div>
                </div>
                <div class="form-control mt-4">
                  <label class="label">
                    <span class="label-text">Confirmar nueva contraseña</span>
                  </label>
                  <input type="password" class="input input-bordered" placeholder="••••••••" />
                </div>
                <button class="btn btn-warning mt-4">Actualizar Contraseña</button>
              </div>

              <!-- Two Factor Authentication -->
              <div class="border border-base-300 rounded-lg p-6">
                <div class="flex items-center justify-between mb-4">
                  <div>
                    <h3 class="font-semibold flex items-center gap-2">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z"/>
                      </svg>
                      Autenticación de Dos Factores
                    </h3>
                    <p class="text-sm text-base-content/60">Agrega una capa extra de seguridad a tu cuenta</p>
                  </div>
                  <input type="checkbox" class="toggle toggle-warning" />
                </div>
                <div class="alert alert-info">
                  <svg class="stroke-current shrink-0 w-6 h-6" fill="none" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                  </svg>
                  <div class="text-sm">
                    <div class="font-medium">2FA no configurado</div>
                    <div>Usa una app como Google Authenticator para mayor seguridad</div>
                  </div>
                </div>
              </div>

              <!-- Reset Options -->
              <div class="border border-error/20 rounded-lg p-6 bg-error/5">
                <h3 class="font-semibold text-error mb-4 flex items-center gap-2">
                  <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"/>
                  </svg>
                  Opciones de Recuperación
                </h3>
                <div class="space-y-3">
                  <button class="btn btn-outline btn-error btn-sm">
                    <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 8l7.89 4.26a2 2 0 002.22 0L21 8M5 19h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v10a2 2 0 002 2z"/>
                    </svg>
                    Enviar Email de Recuperación
                  </button>
                  <p class="text-xs text-base-content/60">¿Olvidaste tu contraseña? Te enviaremos un enlace de recuperación</p>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- My Devices -->
        <div class="card bg-base-100 shadow-lg border border-base-300">
          <div class="card-body">
            <div class="flex items-center justify-between mb-6">
              <h2 class="card-title">
                <svg class="w-5 h-5 text-secondary" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M8.111 16.404a5.5 5.5 0 017.778 0M12 20h.01m-7.08-7.071c3.904-3.905 10.236-3.905 14.141 0M1.394 9.393c5.857-5.857 15.355-5.857 21.213 0"/>
                </svg>
                Mis Dispositivos
              </h2>
              <a href="/devices" class="btn btn-primary btn-sm">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"/>
                </svg>
                Agregar Dispositivo
              </a>
            </div>

            <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
              {userProfile.devices.map((device, index) => {
                const statusConfig = {
                  online: { color: 'bg-success', text: 'En línea', badge: 'badge-success' },
                  warning: { color: 'bg-warning', text: 'Advertencia', badge: 'badge-warning' },
                  offline: { color: 'bg-error', text: 'Desconectado', badge: 'badge-error' }
                };

                return (
                  <div key={index} class="card border border-base-300 bg-base-50 hover:shadow-md transition-shadow">
                    <div class="card-body p-4">
                      <div class="flex items-center justify-between mb-2">
                        <div class="flex items-center gap-2">
                          <div class={`w-3 h-3 ${statusConfig[device.status].color} rounded-full`}></div>
                          <h3 class="font-semibold text-sm">{device.name}</h3>
                        </div>
                        <div class={`badge ${statusConfig[device.status].badge} badge-xs`}>
                          {statusConfig[device.status].text}
                        </div>
                      </div>
                      <p class="text-xs text-base-content/60 mb-2">{device.location}</p>
                      <div class="flex justify-between items-center">
                        <div class="text-lg font-bold text-primary">{device.lastReading}</div>
                        <div class="text-xs text-base-content/50">{device.time}</div>
                      </div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </div>

        <!-- Preferences -->
        <div class="card bg-base-100 shadow-lg border border-base-300">
          <div class="card-body">
            <h2 class="card-title mb-6">
              <svg class="w-5 h-5 text-info" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
              </svg>
              Preferencias
            </h2>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
              <!-- UI Preferences -->
              <div class="space-y-4">
                <h3 class="font-medium">Apariencia</h3>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Tema</span>
                  </label>
                  <select class="select select-bordered select-sm">
                    <option value="system" selected>Automático</option>
                    <option value="light">Claro</option>
                    <option value="dark">Oscuro</option>
                  </select>
                </div>
                <div class="form-control">
                  <label class="label">
                    <span class="label-text">Idioma</span>
                  </label>
                  <select class="select select-bordered select-sm">
                    <option value="es" selected>Español</option>
                    <option value="en">English</option>
                  </select>
                </div>
              </div>

              <!-- Notification Preferences -->
              <div class="space-y-4">
                <h3 class="font-medium">Notificaciones</h3>
                <div class="form-control">
                  <label class="label cursor-pointer justify-start gap-3">
                    <input type="checkbox" class="toggle toggle-primary toggle-sm" checked={userProfile.preferences.notifications.email} />
                    <span class="label-text">Notificaciones por email</span>
                  </label>
                </div>
                <div class="form-control">
                  <label class="label cursor-pointer justify-start gap-3">
                    <input type="checkbox" class="toggle toggle-primary toggle-sm" checked={userProfile.preferences.notifications.push} />
                    <span class="label-text">Notificaciones push</span>
                  </label>
                </div>
                <div class="form-control">
                  <label class="label cursor-pointer justify-start gap-3">
                    <input type="checkbox" class="toggle toggle-primary toggle-sm" checked={userProfile.preferences.notifications.sms} />
                    <span class="label-text">Mensajes SMS</span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>

        <!-- Recent Activity -->
        <div class="card bg-base-100 shadow-lg border border-base-300">
          <div class="card-body">
            <h2 class="card-title mb-6">
              <svg class="w-5 h-5 text-accent" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 8v4l3 3m6-3a9 9 0 11-18 0 9 9 0 0118 0z"/>
              </svg>
              Actividad Reciente
            </h2>

            <div class="space-y-3">
              {userProfile.recentActivity.map((activity, index) => {
                const colorClasses = {
                  success: 'text-success',
                  warning: 'text-warning', 
                  info: 'text-info'
                };

                return (
                  <div key={index} class="flex items-center gap-3 p-3 bg-base-200 rounded-lg">
                    <div class={`flex-shrink-0 ${colorClasses[activity.color]}`}>
                      {activity.icon === 'exclamation-triangle' && (
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"/>
                        </svg>
                      )}
                      {activity.icon === 'check-circle' && (
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
                        </svg>
                      )}
                      {activity.icon === 'cog' && (
                        <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"/>
                        </svg>
                      )}
                    </div>
                    <div class="flex-1">
                      <div class="font-medium">{activity.message}</div>
                      <div class="text-sm text-base-content/60">{getRelativeTime(activity.time)}</div>
                    </div>
                  </div>
                );
              })}
            </div>
          </div>
        </div>

        <!-- Account Actions -->
        <div class="card bg-error/10 border-error shadow-lg border">
          <div class="card-body">
            <h2 class="card-title text-error mb-4">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L4.082 15.5c-.77.833.192 2.5 1.732 2.5z"/>
              </svg>
              Acciones de Cuenta
            </h2>
            
            <div class="grid grid-cols-1 md:grid-cols-3 gap-4">
              <div class="space-y-2">
                <h3 class="font-medium">Exportar Datos</h3>
                <p class="text-sm text-base-content/60">Descarga una copia de toda tu información</p>
                <button class="btn btn-outline btn-sm">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 10v6m0 0l-3-3m3 3l3-3m2 8H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"/>
                  </svg>
                  Exportar
                </button>
              </div>

              <div class="space-y-2">
                <h3 class="font-medium">Desactivar Cuenta</h3>
                <p class="text-sm text-base-content/60">Suspende temporalmente tu cuenta</p>
                <button class="btn btn-outline btn-warning btn-sm">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18.364 18.364A9 9 0 005.636 5.636m12.728 12.728L5.636 5.636m12.728 12.728L18.364 5.636M5.636 18.364l12.728-12.728"/>
                  </svg>
                  Desactivar
                </button>
              </div>

              <div class="space-y-2">
                <h3 class="font-medium">Eliminar Cuenta</h3>
                <p class="text-sm text-base-content/60">Elimina permanentemente tu cuenta</p>
                <button class="btn btn-error btn-sm" onclick="confirmDeleteAccount()">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
                  </svg>
                  Eliminar
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</AppLayout>

<script>
  // Form handling
  document.addEventListener('DOMContentLoaded', function() {
    // Save profile changes
    const profileForm = document.querySelector('form');
    if (profileForm) {
      profileForm.addEventListener('submit', function(e) {
        e.preventDefault();
        showToast('Información actualizada exitosamente', 'success');
      });
    }

    // Password change
    const passwordBtn = document.querySelector('.btn-warning');
    if (passwordBtn) {
      passwordBtn.addEventListener('click', function() {
        showToast('Contraseña actualizada correctamente', 'success');
      });
    }
  });

  function confirmDeleteAccount() {
    const modal = document.createElement('div');
    modal.className = 'modal modal-open';
    modal.innerHTML = `
      <div class="modal-box">
        <h3 class="font-bold text-lg text-error">¡Confirmar eliminación de cuenta!</h3>
        <p class="py-4">Esta acción eliminará permanentemente tu cuenta y todos los datos asociados, incluyendo tus dispositivos y configuraciones.</p>
        <p class="py-2 font-medium">Para confirmar, escribe tu email:</p>
        <input type="email" id="confirmEmail" class="input input-bordered w-full mb-4" placeholder="tu-email@ejemplo.com">
        <div class="modal-action">
          <button class="btn" onclick="this.closest('.modal').remove()">Cancelar</button>
          <button class="btn btn-error" onclick="processAccountDeletion()">Eliminar Mi Cuenta</button>
        </div>
      </div>
    `;
    document.body.appendChild(modal);
  }

  function processAccountDeletion() {
    const confirmEmail = document.getElementById('confirmEmail').value;
    if (confirmEmail && confirmEmail.includes('@')) {
      showToast('Cuenta eliminada exitosamente', 'error');
      document.querySelector('.modal').remove();
      // Aquí rediriges al login o página de inicio
      setTimeout(() => {
        window.location.href = '/';
      }, 2000);
    } else {
      showToast('Debes escribir tu email correctamente', 'warning');
    }
  }

  function showToast(message, type) {
    const toast = document.createElement('div');
    toast.className = 'toast toast-top toast-end';
    const alertClass = type === 'success' ? 'alert-success' : 
                      type === 'error' ? 'alert-error' : 
                      type === 'warning' ? 'alert-warning' : 'alert-info';
    
    toast.innerHTML = `
      <div class="alert ${alertClass}">
        <svg class="stroke-current shrink-0 w-6 h-6" fill="none" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z"/>
        </svg>
        <span>${message}</span>
      </div>
    `;
    document.body.appendChild(toast);
    
    setTimeout(() => {
      toast.remove();
    }, 3000);
  }
</script>
