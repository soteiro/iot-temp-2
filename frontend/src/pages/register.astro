---
import Layout from "@/layouts/Layout.astro";
---

<Layout title="Registro - IoT Monitor">
<main class="min-h-screen bg-base-200 flex items-center justify-center p-4">
  <div class="w-full max-w-md">
    <!-- Card principal -->
    <div class="card bg-base-100 shadow-2xl">
      <div class="card-body">
        <!-- Header del card -->
        <div class="text-center mb-6">
          <div class="inline-block p-3 bg-primary/10 rounded-full mb-4">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-12 w-12 text-primary" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
            </svg>
          </div>
          <h1 class="text-3xl font-bold">Crear Cuenta</h1>
          <p class="text-base-content/70 mt-2">Únete y comienza a monitorear tus dispositivos IoT</p>
        </div>

        <!-- Formulario -->
        <form id="registerForm" class="space-y-4">
          <div class="form-control">
            <label class="label" for="name">
              <span class="label-text font-medium">Nombre completo</span>
            </label>
            <input 
              class="input input-bordered w-full focus:input-primary" 
              type="text" 
              id="name" 
              name="name" 
              placeholder="Tu nombre"
              required 
              autofocus 
            />
          </div>

          <div class="form-control">
            <label class="label" for="email">
              <span class="label-text font-medium">Email</span>
            </label>
            <input 
              class="input input-bordered w-full focus:input-primary" 
              type="email" 
              id="email" 
              name="email" 
              placeholder="tu@email.com"
              required 
            />
          </div>

          <div class="form-control">
            <label class="label" for="password">
              <span class="label-text font-medium">Contraseña</span>
            </label>
            <input 
              class="input input-bordered w-full focus:input-primary" 
              type="password" 
              id="password" 
              name="password" 
              placeholder="Mínimo 8 caracteres"
              required 
              minlength="8"
            />
          </div>

          <div class="form-control">
            <label class="label" for="confirmPassword">
              <span class="label-text font-medium">Confirmar contraseña</span>
            </label>
            <input 
              class="input input-bordered w-full focus:input-primary" 
              type="password" 
              id="confirmPassword" 
              name="confirmPassword" 
              placeholder="Repite tu contraseña"
              required 
              minlength="8"
            />
          </div>

          <!-- Mensaje de error -->
          <div id="errorMessage" class="alert alert-error hidden">
            <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10 14l2-2m0 0l2-2m-2 2l-2-2m2 2l2 2m7-2a9 9 0 11-18 0 9 9 0 0118 0z" />
            </svg>
            <span id="errorText"></span>
          </div>

          <button class="btn btn-primary w-full gap-2" type="submit">
            <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" fill="none" viewBox="0 0 24 24" stroke="currentColor">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z" />
            </svg>
            Crear Cuenta
          </button>
        </form>

        <!-- Loading Spinner -->
        <div class="flex justify-center mt-4">
          <span id="loadingSpinner" class="loading loading-ring loading-lg text-primary hidden"></span>
        </div>

        <!-- Link a login -->
        <div class="text-center mt-6 pt-4 border-t border-base-300">
          <p class="text-base-content/70">
            ¿Ya tienes cuenta? 
            <a href="/login" class="link link-primary font-semibold">Iniciar sesión</a>
          </p>
        </div>
      </div>
    </div>

    <!-- Info adicional -->
    <div class="text-center mt-6">
      <p class="text-base-content/60 text-sm">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4 inline mr-1" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12l2 2 4-4m5.618-4.016A11.955 11.955 0 0112 2.944a11.955 11.955 0 01-8.618 3.04A12.02 12.02 0 003 9c0 5.591 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.042-.133-2.052-.382-3.016z" />
        </svg>
        Tus datos están seguros y protegidos
      </p>
    </div>
  </div>
</main>
</Layout>

<script>
  const registerForm = document.getElementById('registerForm') as HTMLFormElement;
  const loadingSpinner = document.getElementById('loadingSpinner');
  const errorMessage = document.getElementById('errorMessage');
  const errorText = document.getElementById('errorText');

  if (registerForm && loadingSpinner && errorMessage && errorText) {
    registerForm.addEventListener('submit', async (e) => {
      e.preventDefault();
      
      const nameInput = document.getElementById('name') as HTMLInputElement;
      const emailInput = document.getElementById('email') as HTMLInputElement;
      const passwordInput = document.getElementById('password') as HTMLInputElement;
      const confirmPasswordInput = document.getElementById('confirmPassword') as HTMLInputElement;
      
      // Ocultar mensaje de error previo
      errorMessage.classList.add('hidden');
      
      // Validar que todos los campos estén llenos
      if (!nameInput.value || !emailInput.value || !passwordInput.value || !confirmPasswordInput.value) {
        errorText.textContent = 'Por favor completa todos los campos';
        errorMessage.classList.remove('hidden');
        return;
      }
      
      // Validar que las contraseñas coincidan
      if (passwordInput.value !== confirmPasswordInput.value) {
        errorText.textContent = 'Las contraseñas no coinciden';
        errorMessage.classList.remove('hidden');
        return;
      }
      
      // Validar longitud mínima de contraseña
      if (passwordInput.value.length < 8) {
        errorText.textContent = 'La contraseña debe tener al menos 6 caracteres';
        errorMessage.classList.remove('hidden');
        return;
      }
      
      // Mostrar spinner
      loadingSpinner.classList.remove('hidden');
      
      try {
        const response = await fetch('api/auth/register', {
          method: 'POST',
          headers: { 
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ 
            name: nameInput.value,
            email: emailInput.value, 
            password: passwordInput.value 
          }),
          credentials: 'include' 
        });
        
        if (response.ok) {
          // Registro exitoso, redirigir al dashboard o login
          window.location.href = '/dashboard';
        } else {
          loadingSpinner.classList.add('hidden');
          const errorData = await response.json();
          errorText.textContent = errorData.message || 'Error en el registro';
          errorMessage.classList.remove('hidden');
        }
      } catch(error) {
        loadingSpinner.classList.add('hidden');
        errorText.textContent = 'Error de conexión. Por favor intenta de nuevo';
        errorMessage.classList.remove('hidden');
        console.error(error);
      }
    });
  }
</script>
